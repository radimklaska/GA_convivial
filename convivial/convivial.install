<?php

use Drupal\Component\FileSecurity\FileSecurity;

/**
 * Implements hook_install().
 */
function convivial_install() {
  // Create config folders for all config splits.
  $splits = \Drupal::entityTypeManager()->getStorage('config_split')->loadMultiple();
  $base_path = drupal_get_path('profile', 'convivial') . '/config/';
  foreach ($splits as $split) {
    $path = $base_path . $split->id();
    if (is_dir($path)) {
      // Create split folder and copy files.
      $target = $split->get('folder');
      // @see Drupal\config_split\Plugin\ConfigFilter\SplitFilter::getSecondaryStorage()
      if (!is_dir($target)) {
        // If the directory doesn't exist, attempt to create it.
        // This might have some negative consequences but we trust the user to
        // have properly configured their site.
        /* @noinspection MkdirRaceConditionInspection */
        @mkdir($target, 0777, TRUE);
      }
      // The following is roughly: file_save_htaccess($directory, TRUE, TRUE);
      // But we can't use global drupal functions and we want to write the
      // .htaccess file to ensure the configuration is protected and the
      // directory not empty.
      if (file_exists($target) && is_writable($target)) {
        $htaccess_path = rtrim($target, '/\\') . '/.htaccess';
        if (!file_exists($htaccess_path)) {
          file_put_contents($htaccess_path, FileSecurity::htaccessLines(TRUE));
          @chmod($htaccess_path, 0444);
        }
      }
      // End copypaste from SplitFilter.
      $dir = opendir($path);
      while(false !== ( $file = readdir($dir)) ) {
        if (( $file != '.' ) && ( $file != '..' )) {
          copy($path . '/' . $file,$target . '/' . $file);
        }
      }
      closedir($dir);
    }
  }
}
